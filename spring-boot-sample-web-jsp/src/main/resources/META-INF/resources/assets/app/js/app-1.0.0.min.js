/*! issue-tracker-ui 2015-11-25 */

Backbone.Marionette.Renderer.render=function(a,b){return IssueTrackerTemplates[a](b)},window.IssueTrackerApp=new Backbone.Marionette.Application,IssueTrackerApp.navigate=function(a,b){logger.debug("IssueTrackerApp.navigate route:"+a),b=b||{},Backbone.history.navigate(a,b)},IssueTrackerApp.getCurrentRoute=function(){return Backbone.history.fragment},IssueTrackerApp.addRegions({headerRegion:"#header-region",mainRegion:"#main-region",dialogRegion:"#dialog-region",footerRegion:"#footer-region"}),IssueTrackerApp.on("start",function(a){logger.debug("Backbone.history.start"),Backbone.history.start(),""===IssueTrackerApp.getCurrentRoute()&&IssueTrackerApp.execute("issuemanager:list")}),$(function(){window.logger=log4javascript.getLogger(),consoleAppender=new log4javascript.BrowserConsoleAppender,consoleAppender.setLayout(new log4javascript.PatternLayout("%d{HH:mm:ss} %-5p- %m")),window.logger.addAppender(consoleAppender),logger.debug("IssueTrackerApp.start"),IssueTrackerApp.start()}),IssueTrackerApp.module("Common",function(a,b,c,d,e,f){a.DialogView=c.Marionette.ItemView.extend({className:"modal fade",template:"dialog",triggers:{"click .js-primary":"primary","click .js-secondary":"secondary"},serializeData:function(){return this.options},onShow:function(){this.$el.modal("show")},onHide:function(){this.$el.modal("hide")}})}),IssueTrackerApp.module("Entities",function(a,b,c,d,e,f){a.Issue=c.Model.extend({urlRoot:"http://localhost:28080/issues",defaults:{status:"OPEN"},validate:function(a,b){var c={};return a.title||(c.title="Title is required."),a.description||(c.description="Description is required."),a.type||(c.type="Type is required."),a.priority||(c.priority="Priority is required."),f.isEmpty(c)?void 0:c}}),a.IssueCollection=c.Collection.extend({model:a.Issue,url:"http://localhost:28080/issues"});var g=d.Controller.extend({getIssues:function(){logger.debug("IssueEntityController.getIssues");var b=new a.IssueCollection,c=e.Deferred();return b.fetch({success:function(a){c.resolve(a)}}),c.promise()},getIssue:function(b){logger.debug("IssueEntityController.getIssue");var c=new a.Issue({id:b}),d=e.Deferred();return c.fetch({success:function(a){d.resolve(a)}}),d.promise()}}),h=new g;b.reqres.setHandler("issue:entities",function(){return logger.debug("Manejando request issue:entities"),h.getIssues()}),b.reqres.setHandler("issue:entity",function(a){return logger.debug("Handling 'issue:entity' request"),h.getIssue(a)})}),IssueTrackerApp.module("Footer",function(a,b,c,d,e,f){var g=d.Controller.extend({show:function(){logger.debug("FooterController.show");var c=new a.FooterView;b.footerRegion.show(c)}}),h=new g;a.addInitializer(function(){logger.debug("Footer initializer"),h.show()})}),IssueTrackerApp.module("Footer",function(a,b,c,d,e,f){a.FooterView=c.Marionette.ItemView.extend({className:"container-fluid",template:"footer"})}),IssueTrackerApp.module("Header",function(a,b,c,d,e,f){var g=d.Controller.extend({show:function(){logger.debug("HeaderController.show");var c=new a.NavBarView;b.headerRegion.show(c)}}),h=new g;a.addInitializer(function(){logger.debug("Header initializer"),h.show()})}),IssueTrackerApp.module("Header",function(a,b,c,d,e,f){a.NavBarView=c.Marionette.ItemView.extend({template:"navbar",ui:{navigation:".js-nav"},events:{"click @ui.navigation":"onNavigationClicked"},onNavigationClicked:function(a){a.preventDefault();var c=e(a.target).attr("data-nav-target");b.execute(c)}})}),IssueTrackerApp.module("IssueManager",function(a,b,c,d,e,f){var g=d.AppRouter.extend({appRoutes:{issues:"list","issues/:id":"view"}}),h=d.Controller.extend({list:function(c){logger.debug("IssueManagerController.list");var d=function(c){var d=new a.IssueListView({collection:c});d.on("childview:issue:edit",function(a){logger.debug("Handling 'childview:issue:edit' event"),b.execute("issuemanager:edit",a.model.get("id"),a.model,c)}),d.on("childview:issue:view",function(a){logger.debug("Handling 'childview:issue:view' event"),b.execute("issuemanager:view",a.model.get("id"),a.model,c)}),d.on("childview:issue:delete",function(a){logger.debug("Handling 'childview:issue:delete' event");var c=new b.Common.DialogView({title:"Delete Issue?",body:"Click confirm to permanently delete this issue.",primary:"Confirm",secondary:"Cancel"});c.on("primary",function(){logger.debug("Handling 'primary' dialog event"),a.model.destroy(),c.triggerMethod("hide")}),c.on("secondary",function(){logger.debug("Handling 'secondary' dialog event"),c.triggerMethod("hide")}),b.dialogRegion.show(c)}),logger.debug("Show IssueListView in IssueTrackerApp.mainRegion"),b.mainRegion.show(d)};if(c)d(c);else{var f=b.request("issue:entities");e.when(f).done(function(a){d(a)})}},add:function(){logger.debug("IssueManagerController.add");var c=new a.IssueAddView;c.on("form:cancel",function(){logger.debug("Handling 'form:cancel' event"),b.execute("issuemanager:list")}),c.on("form:submit",function(a){logger.debug("Handling 'form:submit' event"),logger.debug("form data:"+JSON.stringify(a));var d=new b.Entities.Issue;d.save(a,{success:function(){b.execute("issuemanager:list")},error:function(){alert("An unexpected problem has occurred.")}})||c.triggerMethod("form:validation:failed",d.validationError)}),logger.debug("Show IssueAddView in IssueTrackerApp.mainRegion"),b.mainRegion.show(c)},edit:function(c,d,f){logger.debug("IssueManagerController.edit");var g=function(d,e){var f=new a.IssueEditView({model:d});f.on("form:cancel",function(){logger.debug("Handling 'form:cancel' event"),b.execute("issuemanager:view",c,d,e)}),f.on("form:submit",function(a){logger.debug("Handling 'form:submit' event"),logger.debug("form data:"+JSON.stringify(a)),d.save(a,{success:function(){b.execute("issuemanager:view",c,d,e)},error:function(){alert("An unexpected problem has occurred.")}})||f.triggerMethod("form:validation:failed",d.validationError)}),logger.debug("Show IssueEditView in IssueTrackerApp.mainRegion"),b.mainRegion.show(f)};if(d)g(d,f);else{var h=b.request("issue:entity",c);e.when(h).done(function(a){g(a,f)})}},view:function(c,d,f){logger.debug("IssueManagerController.view id:"+c);var g=function(c,d){var e=new a.IssueView({model:c});e.on("issue:list",function(a){logger.debug("Handling 'issue:list' event"),b.execute("issuemanager:list",d)}),logger.debug("Show IssueView in IssueTrackerApp.mainRegion"),b.mainRegion.show(e)};if(d)g(d,f);else{var h=b.request("issue:entity",c);e.when(h).done(function(a){g(a,f)})}}}),i=new h;a.addInitializer(function(){logger.debug("IssueManager initializer");new g({controller:i})}),b.commands.setHandler("issuemanager:list",function(a){logger.debug("Handling 'issuemanager:list' command"),b.navigate("issues"),i.list(a)}),b.commands.setHandler("issuemanager:add",function(){logger.debug("Handling 'issuemanager:add' command"),i.add()}),b.commands.setHandler("issuemanager:view",function(a,c,d){logger.debug("Handling 'issuemanager:view' command"),b.navigate("issues/"+a),i.view(a,c,d)}),b.commands.setHandler("issuemanager:edit",function(a,b,c){logger.debug("Handling 'issuemanager:edit' command"),i.edit(a,b,c)})}),IssueTrackerApp.module("IssueManager",function(a,b,c,d,e,f){a.IssueListEmptyView=c.Marionette.ItemView.extend({tagName:"tr",template:"issuelistempty"}),a.IssueListItemView=c.Marionette.ItemView.extend({tagName:"tr",template:"issuelistitem",modelEvents:{change:"render"},triggers:{"click .js-view":"issue:view","click .js-edit":"issue:edit","click .js-delete":"issue:delete"}}),a.IssueListView=c.Marionette.CompositeView.extend({emptyView:a.IssueListEmptyView,childView:a.IssueListItemView,childViewContainer:"tbody",className:"container-fluid",template:"issueList"}),a.IssueAddView=c.Marionette.ItemView.extend({className:"container-fluid",template:"issueadd",ui:{createButton:"button.js-create",cancelButton:"button.js-cancel"},events:{"click @ui.createButton":"onCreateClicked"},triggers:{"click @ui.cancelButton":"form:cancel"},onCreateClicked:function(a){logger.debug("IssueAddView.onCreateClicked"),a.preventDefault(),this.showProcessingState();var b=c.Syphon.serialize(this);this.trigger("form:submit",b)},showProcessingState:function(){var a='<i class="fa fa-circle-o-notch fa-spin"></i> ';this.ui.createButton.button("loading"),this.ui.createButton.prepend(a)},hideProcessingState:function(){this.ui.createButton.button("reset")},onFormValidationFailed:function(a){this.hideProcessingState(),this.hideFormErrors(),f.each(a,this.showFormError,this)},showFormError:function(a,b){var c=this.$el.find('[name="'+b+'"]'),d=c.parents(".form-group"),e='<span class="help-block js-form-error">'+a+"</span>";c.after(e),d.addClass("has-error")},hideFormErrors:function(){this.$el.find(".js-form-error").each(function(){e(this).remove()}),this.$el.find(".form-group.has-error").each(function(){e(this).removeClass("has-error")})}}),a.IssueView=c.Marionette.ItemView.extend({className:"container-fluid",template:"issueview",triggers:{"click .js-list":"issue:list","click .js-edit":"issue:edit"}}),a.IssueEditView=c.Marionette.ItemView.extend({className:"container-fluid",template:"issueedit",ui:{updateButton:"button.js-update",cancelButton:"button.js-cancel"},events:{"click @ui.updateButton":"onUpdateClicked"},triggers:{"click @ui.cancelButton":"form:cancel"},onUpdateClicked:function(a){logger.debug("IssueEditView.onUpdateClicked"),a.preventDefault(),this.showProcessingState();var b=c.Syphon.serialize(this);this.trigger("form:submit",b)},showProcessingState:function(){var a='<i class="fa fa-circle-o-notch fa-spin"></i> ';this.ui.updateButton.button("loading"),this.ui.updateButton.prepend(a)},hideProcessingState:function(){this.ui.updateButton.button("reset")},onFormValidationFailed:function(a){this.hideProcessingState(),this.hideFormErrors(),f.each(a,this.showFormError,this)},showFormError:function(a,b){var c=this.$el.find('[name="'+b+'"]'),d=c.parents(".form-group"),e='<span class="help-block js-form-error">'+a+"</span>";c.after(e),d.addClass("has-error")},hideFormErrors:function(){this.$el.find(".js-form-error").each(function(){e(this).remove()}),this.$el.find(".form-group.has-error").each(function(){e(this).removeClass("has-error")})}})});
//# sourceMappingURL=app-1.0.0.map